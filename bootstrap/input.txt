//This is a comment and should be skipped.

/*
This is a comment block.
/*
These can even be nested!
And still be skipped correctly.
*/
Now we are back in the outer comment block.
This should all be skipped.
*/

extern
{
    i32 putchar(i32 c);
    i32 printf(char* format, ...);
}

namespace std
{
    export struct String
    {
        usize length;
    }
}

namespace Math
{
    usize add(usize a, usize b)
    {
        return a + b;
    }
}

export void exportedFunc()
{

}

char getChar()
{
    return '#';
}

/*string getString()
{
    return "Furox";
}*/

u8 VariadicFunc(usize x, ...)
{
    return 2;
}

//This is the main function.
usize Main()
{
    usize foo = 0b1000;
    usize bar = 0xFFFFFF;
    usize buzz;

    usize value = 0;
    char c = 'c';
    //string str = "Furox";

    usize test = 10 * 20 + 30;
    usize otherTest = 1 * 2 + 3 * 4;

    usize moduloTest = 8 % 3;

    usize paranthesisTest = 3 + (7+8) * 9 + (11);
    usize otherParanthesisTest = (3) + (1+2) * (((1 + 2) + 3) + 4);
    usize multipleParanthesisTest = ((((69))));
    usize anotherParanthesisTest = ((42 + 64) * 69);
    usize anotherInterestingTest = (13 + (14 + 15) * 16);

    usize unaryTest = !42;
    usize otherUnaryTest = (!!1 + -1 * (!3));
    isize negativeNumber = -(-4 * -3);

    usize boolTestAnd = 1 && 0;
    usize boolTestOr = 1 || 0;
    usize boolTestNegation = !1;

    usize binaryTest = ~0b1001 | 0b1100;
    usize otherBinaryTest = 0b111 & 0b100;
    usize anotherBinaryTest = 0b101 ^ 0b010;

    usize comparisonTest = 0 == 1;
    usize nextCompareTest = 2 < 3;
    usize anotherCompareTest = (7 >= 9) < (4 > 2);

    usize functionCallTest = getChar() + Math::add(5, 6);

    usize var = 0;
    var = 1;

    std::String str;
    str.length = 0;
    str.length = str.length + var;

    char[16] buffer;

    void* nonsense = *buffer + &buffer + buffer[8];
    
    printf("Hello, World!\n");

    std::String* str_pointer = &str;
    str_pointer->length = 15;
    printf("String length: %zu\n", str.length);

    u8 kw_value = nullptr + true + false;

    usize i = 0;
    while(i < 10)
    {
        i = i + 1;
        printf("%zu\n", i);
    }

    i = 0;
    do
    {
        i = i + 1;
        printf("%zu\n", i);
    }
    while(i < 10);

    for(i = 0; i < 10; i = (i + 1))
    {
        printf("%zu\n", i);
    }

    return Math::add(1, 2 * 3) * VariadicFunc(1, 2, 3, 'A', "Test");
}
