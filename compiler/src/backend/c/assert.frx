import "c.frx";
import "expr.frx";
import "../../frontend/ast/internal_func_call.frx";

extern struct FILE;

extern
{
    i32 fprintf(mut FILE* stream, char* format, ...);
}

export void transpile_assert(Transpiler* transpiler, AST::Assert* assert_node)
{
    frx::assert(transpiler != nullptr);

    frx::assert(assert_node != nullptr);

    SourceLocation loc = assert_node->range.start;

    fprintf(transpiler->file, "if(!(");
    transpile_expr(transpiler, assert_node->expr);
    fprintf(transpiler->file, "))\n{\n");
    fprintf(transpiler->file,
        "printf(%cAssertion failed: %s:%zu:%zu\\n%c);\nexit(1);\n}\n", '"',
        assert_node->filepath, loc.line, loc.column, '"');
}
