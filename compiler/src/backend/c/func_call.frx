export void transpile_func_call(Transpiler* transpiler, ASTFuncCall* func_call)
{
    assert(transpiler != nullptr);

    assert(func_call != nullptr);

    FuncSymbol* symbol = func_call->symbol;

    char* name = symbol->name;
    if(!symbol->external)
    {
        name = mangle_function_name(symbol->scope, symbol->ns, symbol->name);
    }

    fprintf(transpiler->file, "%s(", name);

    usize i;
    for(i = 0; i < list_size(&func_call->args); i = i + 1)
    {
        AST* ast = list_get(&func_call->args, i);
        transpile_ast(transpiler, ast);

        if(i < list_size(&func_call->args) - 1)
        {
            fprintf(transpiler->file, ", ");
        }
    }

    fprintf(transpiler->file, ")");
}
