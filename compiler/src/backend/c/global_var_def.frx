import "c.frx";
import "expr.frx";
import "type_specifier.frx";
import "../core/mangling.frx";
import "../../frontend/ast/global_var_def.frx";

extern struct FILE;

extern
{
    i32 fprintf(mut FILE* stream, char* format, ...);
}

export void transpile_global_var_def(Transpiler* transpiler,
    GlobalVarDef* var_def)
{
    frx::assert(transpiler != nullptr);

    frx::assert(var_def != nullptr);

    if(transpiler->mode != TranspilerMode::GLOBAL_VARS)
    {
        return;
    }

    VarSymbol* symbol = &var_def->symbol;

    if(!symbol->mutable)
    {
        fprintf(transpiler->file, "const ");
    }

    transpile_type_specifier(transpiler, symbol->type);

    char* mangled_name = mangle_global_var_name(symbol->scope, symbol->ns,
        symbol->name);

    fprintf(transpiler->file, "%s", mangled_name);
    transpile_type_specifier_array_dimensions(transpiler, symbol->type);
    fprintf(transpiler->file, " = ");
    transpile_expr(transpiler, var_def->value);
    fprintf(transpiler->file, ";\n");
}
