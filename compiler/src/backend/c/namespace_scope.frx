import "c.frx";
import "namespace.frx";
import "enum_def.frx";
import "struct_def.frx";
import "func_def.frx";
import "global_var_decl.frx";
import "global_var_def.frx";
import "../../frontend/ast/namespace_scope.frx";

export void transpile_namespace_scope(Transpiler* transpiler, AST::NamespaceScope* namespace_scope)
{
    frx::assert(transpiler != nullptr);

    frx::assert(namespace_scope != nullptr);

    switch(namespace_scope->type)
    {
        case AST::NamespaceScopeType::NAMESPACE:
        {
            transpile_namespace(transpiler, namespace_scope->ns);

            break;
        }

        case AST::NamespaceScopeType::ENUM_DEF:
        {
            transpile_enum_def(transpiler, namespace_scope->enum_def);

            break;
        }

        case AST::NamespaceScopeType::STRUCT_DEF:
        {
            transpile_struct_def(transpiler, namespace_scope->struct_def);

            break;
        }

        case AST::NamespaceScopeType::FUNC_DEF:
        {
            transpile_func_def(transpiler, namespace_scope->func_def);

            break;
        }

        case AST::NamespaceScopeType::GLOBAL_VAR_DECL:
        {
            transpile_global_var_decl(transpiler, namespace_scope->global_var_decl);

            break;
        }

        case AST::NamespaceScopeType::GLOBAL_VAR_DEF:
        {
            transpile_global_var_def(transpiler, namespace_scope->global_var_def);

            break;
        }

        default:
        {
            frx::assert(false);

            break;
        }
    }
}
