import "c.frx";
import "struct_def.frx";
import "translation_unit.frx";
import "../../core/queue.frx";
import "../../frontend/ast/program.frx";

export void transpile_program(mut Transpiler* transpiler, Program* program)
{
    frx::assert(transpiler != nullptr);

    frx::assert(program != nullptr);

    mut TranspilerMode mode;
    for(mode = TranspilerMode::MACROS; mode < TranspilerMode::COUNT;
        mode = mode + 1)
    {
        transpiler->mode = mode;

        mut usize i;
        for(i = 0; i < list_size(&program->translation_units); i = i + 1)
        {
            Compound* translation_unit = list_get(
                &program->translation_units, i);

            transpile_translation_unit(transpiler, translation_unit);
        }

        if(transpiler->mode == TranspilerMode::STRUCT_IMPL)
        {
            while(!queue_is_empty(&transpiler->untranspiled_structs))
            {
                StructDef* struct_def =
                    queue_dequeue(&transpiler->untranspiled_structs);

                transpile_struct_def(transpiler, struct_def);
            }
        }
    }
}
