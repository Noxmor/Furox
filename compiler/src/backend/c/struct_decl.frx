import "c.frx";
import "../../frontend/symbols/struct.frx";
import "../../frontend/syntax/struct_decl.frx";

extern struct FILE;

extern
{
    i32 fprintf(mut FILE* stream, char* format, ...);
    i32 strcmp(char* str1, char* str2);
}

export void transpile_struct_decl(Transpiler* transpiler,
    ASTStructDecl* struct_decl)
{
    frx::assert(transpiler != nullptr);

    frx::assert(struct_decl != nullptr);

    StructSymbol* symbol = &struct_decl->symbol;
    char* name = symbol->name;

    if(transpiler->mode == TranspilerMode::STRUCT_DECL)
    {
        if(strcmp(name, "va_list") != 0)
        {
            fprintf(transpiler->file, "typedef struct %s %s;\n", name, name);
        }
    }
}
