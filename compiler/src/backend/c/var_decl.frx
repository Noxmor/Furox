export void transpile_var_decl(Transpiler* transpiler, ASTVarDecl* var_decl)
{
    assert(transpiler != nullptr);

    assert(var_decl != nullptr);

    if(transpiler->mode != TRANSPILER_MODE_GLOBAL_VARS
        && !(transpiler->mode == TRANSPILER_MODE_FUNC_IMPL
            && transpiler->inside_function_body))
    {
        return;
    }

    VarSymbol* symbol = var_decl->symbol;

    transpile_type_specifier(transpiler, symbol->type);
    fprintf(transpiler->file, "%s", symbol->name);
    transpile_type_specifier_array_dimensions(transpiler, symbol->type);
    fprintf(transpiler->file, ";\n");
}
