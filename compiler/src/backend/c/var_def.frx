export void transpile_var_def(Transpiler* transpiler, ASTVarDef* var_def)
{
    assert(transpiler != nullptr);

    assert(var_def != nullptr);

    if(transpiler->mode != TRANSPILER_MODE_FUNC_IMPL)
    {
        return;
    }

    VarSymbol* symbol = var_def->symbol;

    if(!symbol->mutable)
    {
        fprintf(transpiler->file, "const ");
    }

    transpile_type_specifier(transpiler, symbol->type);
    fprintf(transpiler->file, "%s", symbol->name);
    transpile_type_specifier_array_dimensions(transpiler, symbol->type);
    fprintf(transpiler->file, " = ");
    transpile_ast(transpiler, var_def->value);
    fprintf(transpiler->file, ";\n");
}
