import "std/libc.frx";

export struct Arena
{
    usize size;
    usize pos;

    void* buffer;
}

export void arena_init(mut Arena* arena, usize size)
{
    frx::assert(arena != nullptr);

    frx::assert(size > 0);

    arena->size = size;
    arena->pos = 0;
    arena->buffer = libc_malloc(arena->size);
}

export void* arena_alloc(mut Arena* arena, usize size)
{
    frx::assert(arena != nullptr);

    frx::assert(size > 0);

    frx::assert(arena->buffer != nullptr);

    frx::assert(arena->pos + size <= arena->size);

    void* memory = arena->buffer + arena->pos;

    arena->pos = arena->pos + size;

    return memory;
}

export void arena_reset(mut Arena* arena)
{
    frx::assert(arena != nullptr);

    arena->pos = 0;
}

export void arena_destroy(Arena* arena)
{
    frx::assert(arena != nullptr);

    libc_free(arena->buffer);
}
