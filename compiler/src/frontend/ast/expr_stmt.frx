import "../../core/arena.frx";
import "ast.frx";
export import "expr.frx";

extern struct FILE;

extern
{
    i32 fprintf(mut FILE* stream, char* format, ...);
}

export struct ExprStmt
{
    Expr* expr;
}

export ExprStmt* expr_stmt_new(Arena* arena, Expr* expr)
{
    mut ExprStmt* expr_stmt = arena_alloc(arena, frx::sizeof(ExprStmt));

    expr_stmt->expr = expr;

    return expr_stmt;
}

export void expr_stmt_print(ExprStmt* expr_stmt, mut FILE* file, usize depth)
{
    frx::assert(expr_stmt != nullptr);

    frx::assert(file != nullptr);

    print_depth(file, depth);

    fprintf(file, "%s\n", "expression-statement");
    expr_print(expr_stmt->expr, file, depth + 1);
}
