import "../../core/arena.frx";
import "ast.frx";

extern struct FILE;

extern
{
    i32 fprintf(mut FILE* stream, char* format, ...);
}

export struct FloatLiteral
{
    u64 value;
}

export FloatLiteral* float_literal_new(Arena* arena, u64 value)
{
    mut FloatLiteral* float_literal = arena_alloc(arena, frx::sizeof(FloatLiteral));

    float_literal->value = value;

    return float_literal;
}

export void float_literal_print(FloatLiteral* literal, mut FILE* file, usize depth)
{
    frx::assert(literal != nullptr);

    frx::assert(file != nullptr);

    print_depth(file, depth);

    u64 integer = literal->value >> 32;
    u64 decimal = literal->value & 0xFFFFFFFF;

    fprintf(file, "%s (%zu.%zuf)\n", "float-literal", integer, decimal);
}
