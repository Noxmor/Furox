import "../../core/arena.frx";
import "ast.frx";
export import "module_path.frx";
export import "../../core/module.frx";

extern struct FILE;

extern
{
    i32 fprintf(mut FILE* stream, char* format, ...);
}

export struct ImportStmt
{
    ModulePath* module_path;
    char* symbol;
    Module* module;
}

export ImportStmt* import_stmt_new(Arena* arena, ModulePath* module_path,
    char* symbol, Module* module)
{
    frx::assert(symbol != nullptr);

    mut ImportStmt* import_stmt = arena_alloc(arena, frx::sizeof(ImportStmt));

    import_stmt->module_path = module_path;
    import_stmt->symbol = symbol;
    import_stmt->module = module;

    return import_stmt;
}

export void import_stmt_print(ImportStmt* import_stmt, mut FILE* file, usize depth)
{
    frx::assert(import_stmt != nullptr);

    frx::assert(file != nullptr);

    print_depth(file, depth);

    fprintf(file, "%s\n", "import-statement");
}
