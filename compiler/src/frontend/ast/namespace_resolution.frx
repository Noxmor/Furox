import "../core/namespace.frx";
import "../core/token.frx";
import "../../core/arena.frx";

extern struct FILE;

extern
{
    i32 fprintf(mut FILE* stream, char* format, ...);
}

namespace AST
{
    export struct NamespaceResolution
    {
        core::Namespace* ns;
        b8 absolute;
    }

    namespace NamespaceResolution
    {
        export NamespaceResolution* new(Arena* arena, core::Namespace* ns, b8 absolute)
        {
            mut NamespaceResolution* namespace_resolution = Arena::alloc(arena, frx::sizeof(NamespaceResolution));

            namespace_resolution->ns = ns;
            namespace_resolution->absolute = absolute;

            return namespace_resolution;
        }

        export b8 is_absolute(NamespaceResolution* namespace_resolution)
        {
            frx::assert(namespace_resolution != nullptr);

            return namespace_resolution->absolute;
        }

        export void print(mut FILE* file, NamespaceResolution* namespace_resolution)
        {
            frx::assert(file != nullptr);

            mut core::Namespace* ns = namespace_resolution->ns;
            while(ns != nullptr)
            {
                fprintf(file, "%s%s", ns->name, TokenType::to_str(TokenType::NAMESPACE_RESOLUTION));

                ns = ns->parent;
            }
        }
    }
}
