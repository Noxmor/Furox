import "std/libc.frx";
import "ast.frx";
import "compound.frx";
import "global_scope.frx";
export import "../../core/list.frx";

extern struct FILE;

extern
{
    i32 fprintf(mut FILE* stream, char* format, ...);
}

namespace AST
{
    export struct Program
    {
        List translation_units;
    }

    namespace Program
    {
        export Program* new()
        {
            Program* program = libc::malloc(frx::sizeof(Program));

            List::init(&program->translation_units);

            return program;
        }

        export void print(Program* program, mut FILE* file, usize depth)
        {
            frx::assert(program != nullptr);

            frx::assert(file != nullptr);

            print_depth(file, depth);

            fprintf(file, "%s\n", "program");

            mut usize i;
            for(i = 0; i < List::size(&program->translation_units); i = i + 1)
            {
                Compound* translation_unit = List::get(&program->translation_units, i);

                mut usize j;
                for(j = 0; j < List::size(&translation_unit->nodes); ++j)
                {
                    AST::GlobalScope* global_scope = List::get(&translation_unit->nodes, j);
                    AST::GlobalScope::print(global_scope, file, depth + 1);
                }
            }
        }
    }
}
