import "../../core/arena.frx";
import "ast.frx";
export import "../symbols/var.frx";

extern struct FILE;

extern
{
    i32 fprintf(mut FILE* stream, char* format, ...);
}

export struct Var
{
    SourceRange range;
    VarSymbol* symbol;

    CoreNamespace* ns;
    CoreScope* scope;
    char* name;
}

export Var* var_new(Arena* arena, CoreNamespace* ns, CoreScope* scope, char* name)
{
    frx::assert(name != nullptr);

    mut Var* var = arena_alloc(arena, frx::sizeof(Var));

    var->symbol = nullptr;
    var->ns = ns;
    var->scope = scope;
    var->name = name;

    return var;
}

export void var_print(Var* var, mut FILE* file, usize depth)
{
    frx::assert(var != nullptr);

    frx::assert(file != nullptr);

    print_depth(file, depth);

    fprintf(file, "%s (%s)\n", "variable", var->name);
}
