import "../../core/arena.frx";
import "ast.frx";
export import "expr.frx";
export import "scope.frx";

extern struct FILE;

extern
{
    i32 fprintf(mut FILE* stream, char* format, ...);
}

export struct WhileLoop
{
    Expr* condition;
    Scope* scope;
}

export WhileLoop* while_loop_new(Arena* arena, Expr* condition, Scope* scope)
{
    frx::assert(condition != nullptr);

    frx::assert(scope != nullptr);

    mut WhileLoop* while_loop = arena_alloc(arena, frx::sizeof(WhileLoop));

    while_loop->condition = condition;
    while_loop->scope = scope;

    return while_loop;
}

export void while_loop_print(WhileLoop* while_loop, mut FILE* file, usize depth)
{
    frx::assert(while_loop != nullptr);

    frx::assert(file != nullptr);

    print_depth(file, depth);

    fprintf(file, "%s\n", "while-loop");
    expr_print(while_loop->condition, file, depth + 1);
    scope_print(while_loop->scope, file, depth + 1);
}
