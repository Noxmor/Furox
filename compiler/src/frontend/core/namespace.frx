import "std/libc.frx";

export struct Namespace
{
    char* name;
    Namespace* parent;
}

export Namespace* namespace_create(Namespace* parent, char* name)
{
    mut Namespace* ns = libc::malloc(frx::sizeof(Namespace));

    ns->name = name;
    ns->parent = parent;

    return ns;
}

export Namespace* namespace_create_global()
{
    return namespace_create(nullptr, "");
}

export void namespace_destroy(Namespace* ns)
{
    if(ns == nullptr)
    {
        return;
    }

    namespace_destroy(ns->parent);
    libc::free(ns);
}

export b8 namespace_equals(Namespace* left, Namespace* right)
{
    if(left == nullptr && right == nullptr)
    {
        return true;
    }

    if(left == nullptr && right != nullptr)
    {
        return false;
    }

    if(left != nullptr && right == nullptr)
    {
        return false;
    }

    if(libc::strcmp(left->name, right->name) != 0)
    {
        return false;
    }

    return namespace_equals(left->parent, right->parent);
}

export b8 namespace_is_global(Namespace* ns)
{
    return ns != nullptr && libc::strcmp(ns->name, "") == 0 && ns->parent == nullptr;
}

export b8 namespace_is_internal(Namespace* ns)
{
    return ns != nullptr && libc::strcmp(ns->name, "frx") == 0
        && namespace_is_global(ns->parent);
}
