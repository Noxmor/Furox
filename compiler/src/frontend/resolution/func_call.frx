import "std/libc.frx";
import "../ast/func_call.frx";
import "../core/parser.frx";
import "../../core/symbol_table.frx";
import "expr.frx";

extern i32 printf(char* format, ...);

export void func_call_resolve_symbols(Parser* parser, mut FuncCall* func_call)
{
    frx::assert(parser != nullptr);

    frx::assert(func_call != nullptr);

    mut usize i;
    for(i = 0; i < list_size(&func_call->args); ++i)
    {
        Expr* arg = list_get(&func_call->args, i);
        expr_resolve_symbols(parser, arg);
    }

    Symbol* symbol = parser_find_symbol(parser, SymbolType::FUNC, func_call->name);

    if(symbol == nullptr)
    {
        printf("Failed to resolve symbol: %s\n", func_call->name);
    }
    else
    {
        func_call->symbol = symbol->data;
    }
}
