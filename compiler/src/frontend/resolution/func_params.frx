import "../ast/func_params.frx";
import "../core/parser.frx";
import "../../core/list.frx";
import "type_specifier.frx";

void func_param_resolve_symbols(Parser* parser, FuncParam* func_param)
{
    frx::assert(parser != nullptr);

    frx::assert(func_param != nullptr);

    type_specifier_resolve_symbols(parser, func_param->symbol.type);
}

export void func_params_resolve_symbols(Parser* parser, FuncParams* func_params)
{
    frx::assert(parser != nullptr);

    frx::assert(func_params != nullptr);

    mut usize i;
    for(i = 0; i < list_size(&func_params->params); ++i)
    {
        FuncParam* func_param = list_get(&func_params->params, i);
        func_param_resolve_symbols(parser, func_param);
    }
}
