import "expr.frx";
import "../core/errors.frx";
import "../core/parser.frx";
import "../ast/func_call.frx";
import "../../core/list.frx";

export void func_call_sema(mut Parser* parser, mut FuncCall* func_call)
{
    frx::assert(parser != nullptr);

    frx::assert(func_call != nullptr);

    CoreNamespace* ns = func_call->resolution->ns;

    if(func_call->symbol == nullptr)
    {
        //FIXME: Print the correct location, this is only a placeholder
        SourceLocation loc;
        error_undefined_func_call(parser_source_file(parser), loc, func_call->name);

        parser_fail(parser);
    }

    mut usize i;
    for(i = 0; i < list_size(&func_call->args); i = i + 1)
    {
        Expr* arg = list_get(&func_call->args, i);
        expr_sema(parser, arg);
    }
}
