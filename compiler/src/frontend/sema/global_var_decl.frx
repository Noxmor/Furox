import "type_specifier.frx";
import "../core/errors.frx";
import "../core/parser.frx";
import "../symbols/var.frx";
import "../ast/global_var_decl.frx";

export void global_var_decl_sema(mut Parser* parser, GlobalVarDecl* var_decl)
{
    frx::assert(parser != nullptr);

    frx::assert(var_decl != nullptr);

    VarSymbol* symbol = &var_decl->symbol;

    type_specifier_sema(parser, symbol->type);

    b8 is_redefinition = var_table_find(&parser->var_table, symbol->scope, symbol->name) != symbol;

    if(is_redefinition)
    {
        //FIXME: Print the correct location, this is only a placeholder
        SourceLocation loc;
        error_var_redefinition(parser_source_file(parser), loc, symbol->name);

        parser_fail(parser);
    }
}
