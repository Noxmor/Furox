import "type_specifier.frx";
import "../core/errors.frx";
import "../core/parser.frx";
import "../symbols/struct.frx";
import "../ast/struct_def.frx";
import "../../core/list.frx";

void struct_field_sema(Parser* parser, StructField* field)
{
    frx::assert(parser != nullptr);

    frx::assert(field != nullptr);

    type_specifier_sema(parser, field->type);
}

export void struct_def_sema(mut Parser* parser, mut StructDef* struct_def)
{
    frx::assert(parser != nullptr);

    frx::assert(struct_def != nullptr);

    StructSymbol* symbol = &struct_def->symbol;

    mut usize i;
    for(i = 0; i < list_size(&symbol->fields); i = i + 1)
    {
        StructField* field = list_get(&symbol->fields, i);
        struct_field_sema(parser, field);
    }
}
