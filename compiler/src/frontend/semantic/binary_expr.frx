export void analyze_binary_expr(Parser* parser, ASTBinaryExpr* expr)
{
    assert(parser != nullptr);

    assert(expr != nullptr);

    switch(expr->operator)
    {
        case TOKEN_TYPE_ARROW:
        {
            ASTVar* var = expr->right->node;
            ASTStructMember* member = make_struct_member(&parser->arena,
                var->name);

            expr->right->type = AST_TYPE_STRUCT_MEMBER;
            expr->right->node = member;

            break;
        }
        case TOKEN_TYPE_DOT:
        {
            ASTVar* var = expr->right->node;
            ASTStructMember* member = make_struct_member(&parser->arena,
                var->name);

            expr->right->type = AST_TYPE_STRUCT_MEMBER;
            expr->right->node = member;

            break;
        }
    }

    analyze_ast(parser, expr->left);
    analyze_ast(parser, expr->right);
}
