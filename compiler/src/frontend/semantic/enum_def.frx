export void analyze_enum_def(Parser* parser, ASTEnumDef* enum_def)
{
    assert(parser != nullptr);

    assert(enum_def != nullptr);

    EnumSymbol* symbol = &enum_def->symbol;

    b8 is_redefinition = false;

    usize i;
    for(i = 0; i < list_size(&parser->imported_parsers) && !is_redefinition;
        i = i + 1)
    {
        Parser* imported_parser = list_get(&parser->imported_parsers, i);
        EnumSymbol* imported_symbol = enum_table_find(
            &imported_parser->enum_table, symbol->ns, symbol->name);

        is_redefinition = imported_symbol != nullptr
            && imported_symbol->exported;
    }

    if(is_redefinition)
    {
        //FIXME: Print the correct location, this is only a placeholder
        SourceLocation loc;
        error_enum_redefinition(parser_source_file(parser), loc, symbol->name);

        parser->failed = true;
    }
}
