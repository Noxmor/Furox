import "ast.frx";
import "../core/errors.frx";
import "../core/parser.frx";
import "../syntax/global_var_def.frx";

export void analyze_global_var_def(Parser* parser, ASTGlobalVarDef* var_def)
{
    assert(parser != nullptr);

    assert(var_def != nullptr);

    VarSymbol* symbol = &var_def->symbol;

    analyze_type_specifier(parser, symbol->type);

    b8 is_redefinition = var_table_find_by_scope(&parser->var_table,
        symbol->scope, symbol->name) != symbol;

    if(is_redefinition)
    {
        //FIXME: Print the correct location, this is only a placeholder
        SourceLocation loc;
        error_var_redefinition(parser_source_file(parser), loc, symbol->name);

        parser->failed = true;
    }

    analyze_ast(parser, var_def->value);
}
