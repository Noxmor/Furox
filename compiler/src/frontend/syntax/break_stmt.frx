import "../core/ast.frx";
import "../core/parser.frx";

extern struct FILE;

extern
{
    i32 fprintf(mut FILE* stream, char* format, ...);
}

export struct ASTBreakStmt
{
    b8 value;
}

ASTBreakStmt* make_break_stmt(Arena* arena)
{
    return arena_alloc(arena, frx::sizeof(ASTBreakStmt));
}

export ASTBreakStmt* parse_break_stmt(Parser* parser)
{
    parser_eat(parser, TokenType::KW_BREAK);

    parser_eat(parser, TokenType::SEMICOLON);

    return make_break_stmt(&parser->arena);
}

export void print_break_stmt(ASTBreakStmt* break_stmt, FILE* file, usize depth)
{
    frx::assert(break_stmt != nullptr);

    frx::assert(file != nullptr);

    print_ast_depth(file, depth);

    fprintf(file, "%s\n", ast_type_to_str(AstType::BREAK_STMT));
}
