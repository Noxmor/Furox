import "../core/parser.frx";

export struct ASTCharLiteral
{
    char* literal;
}

ASTCharLiteral* make_char_literal(Arena* arena, char* literal)
{
    assert(literal != nullptr);

    ASTCharLiteral* char_literal = arena_alloc(arena, sizeof(ASTCharLiteral));

    char_literal->literal = literal;

    return char_literal;
}

export ASTCharLiteral* parse_char_literal(Parser* parser)
{
    assert(parser != nullptr);

    char* literal = parser->token->identifier;

    parser_eat(parser, TOKEN_TYPE_CHAR_LITERAL);

    return make_char_literal(&parser->arena, literal);
}

export void print_char_literal(ASTCharLiteral* char_literal, FILE* file,
    usize depth)
{
    assert(char_literal != nullptr);

    assert(file != nullptr);

    print_ast_depth(file, depth);

    fprintf(file, "%s (%s)\n", ast_type_to_str(AST_TYPE_CHAR_LITERAL),
        char_literal->literal);
}
