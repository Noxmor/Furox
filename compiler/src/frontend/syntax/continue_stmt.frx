import "../core/ast.frx";
import "../core/parser.frx";

extern struct FILE;

extern
{
    i32 fprintf(mut FILE* stream, char* format, ...);
}

export struct ASTContinueStmt
{
    b8 value;
}

ASTContinueStmt* make_continue_stmt(Arena* arena)
{
    return arena_alloc(arena, frx::sizeof(ASTContinueStmt));
}

export ASTContinueStmt* parse_continue_stmt(Parser* parser)
{
    parser_eat(parser, TokenType::KW_CONTINUE);

    parser_eat(parser, TokenType::SEMICOLON);

    return make_continue_stmt(&parser->arena);
}

export void print_continue_stmt(ASTContinueStmt* continue_stmt, FILE* file,
    usize depth)
{
    frx::assert(continue_stmt != nullptr);

    frx::assert(file != nullptr);

    print_ast_depth(file, depth);

    fprintf(file, "%s\n", ast_type_to_str(AstType::CONTINUE_STMT));
}
