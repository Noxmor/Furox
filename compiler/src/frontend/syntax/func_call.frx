export import "../ast/func_call.frx";
import "expr.frx";
import "namespace_resolution.frx";
import "../core/namespace.frx";
import "../core/parser.frx";
import "../core/scope.frx";
import "../symbols/func.frx";
import "../../core/list.frx";

export FuncCall* func_call_parse(Parser* parser, NamespaceResolution* resolution)
{
    frx::assert(parser != nullptr);

    char* name = parser->token->identifier;

    parser_eat(parser, TokenType::IDENTIFIER);

    FuncCall* func_call = func_call_new(&parser->arena, resolution, name, parser->current_scope);

    parser_eat(parser, TokenType::LPAREN);

    while(parser_loop_until(parser, TokenType::RPAREN))
    {
        if(list_size(&func_call->args) > 0)
        {
            parser_eat(parser, TokenType::COMMA);
        }

        Expr* arg = expr_parse(parser);
        list_push(&func_call->args, arg);
    }

    parser_eat(parser, TokenType::RPAREN);

    return func_call;
}
