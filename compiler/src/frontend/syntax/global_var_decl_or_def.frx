import "global_var_decl.frx";
import "global_var_def.frx";
import "../core/parser.frx";

export AST* parse_global_var_decl_or_def(Parser* parser, ASTTypeSpecifier* type,
    b8 mutable)
{
    assert(parser != nullptr);

    assert(type != nullptr);

    char* name = parser->token->identifier;

    parser_eat(parser, TOKEN_TYPE_IDENTIFIER);

    parse_array_dimensions(parser, type);

    AST* ast = nullptr;

    switch(parser->token->type)
    {
        case TOKEN_TYPE_SEMICOLON:
        {
            ast = make_ast(&parser->arena, AST_TYPE_GLOBAL_VAR_DECL,
                parse_global_var_decl(parser, type, name, mutable));

            break;
        }
        case TOKEN_TYPE_EQ:
        {
            ast = make_ast(&parser->arena, AST_TYPE_GLOBAL_VAR_DEF,
                parse_global_var_def(parser, type, name, mutable));

            break;
        }
        default:
        {
            parser_panic(parser);

            break;
        }
    }

    return ast;
}
