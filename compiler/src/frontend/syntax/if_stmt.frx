export import "../ast/if_stmt.frx";
import "expr.frx";
import "scope.frx";
import "../core/parser.frx";

namespace AST::IfStmt
{
    export IfStmt* parse(Parser* parser)
    {
        frx::assert(parser != nullptr);

        parser_eat(parser, TokenType::KW_IF);

        parser_eat(parser, TokenType::LPAREN);
        Expr* condition = AST::Expr::parse(parser);
        parser_eat(parser, TokenType::RPAREN);
        Scope* if_block = AST::Scope::parse(parser);

        mut Scope* else_block = nullptr;
        if(parser->token->type == TokenType::KW_ELSE)
        {
            parser_eat(parser, TokenType::KW_ELSE);

            if(parser->token->type == TokenType::KW_IF)
            {
                else_block = AST::Scope::new(&parser->arena);
                AST::Scope::add_stmt(else_block,
                    AST::Stmt::from_if_stmt(&parser->arena, AST::IfStmt::parse(parser)));
            }
            else
            {
                else_block = AST::Scope::parse(parser);
            }
        }

        return new(&parser->arena, condition, if_block, else_block);
    }
}
