export struct ASTImportStmt
{
    char* filepath;
}

export ASTImportStmt* make_import_stmt(Arena* arena, char* filepath)
{
    assert(filepath != nullptr);

    ASTImportStmt* import_stmt = arena_alloc(arena, sizeof(ASTImportStmt));

    import_stmt->filepath = filepath;
}

ASTImportStmt* parse_import_stmt(Parser* parser)
{
    parser_eat(parser, TOKEN_TYPE_KW_IMPORT);

    ASTImportStmt* import_stmt = make_import_stmt(&parser->arena,
        parser->token->identifier);

    compile(import_stmt->filepath);

    parser_eat(parser, TOKEN_TYPE_STRING_LITERAL);

    parser_eat(parser, TOKEN_TYPE_SEMICOLON);

    return import_stmt;
}

export void print_import_stmt(ASTImportStmt* import_stmt, FILE* file,
    usize depth)
{
    assert(import_stmt != nullptr);

    assert(file != nullptr);

    print_ast_depth(file, depth);

    fprintf(file, "%s (%s)\n", ast_type_to_str(AST_TYPE_IMPORT_STMT),
        import_stmt->filepath);
}
