export import "../ast/module_path.frx";

export ModulePath* module_path_parse(Parser* parser)
{
    frx::assert(parser != nullptr);

    mut Token* next = parser_peek(parser, 1);

    if(parser->token->type != TokenType::IDENTIFIER
        || next->type != TokenType::NAMESPACE_RESOLUTION)
    {
        return nullptr;
    }

    ModulePath* module_path = module_path_init(&parser->arena, parser->token->identifier);
    mut ModulePath* current_module_path = module_path;

    parser_eat(parser, TokenType::IDENTIFIER);
    parser_eat(parser, TokenType::NAMESPACE_RESOLUTION);

    next = parser_peek(parser, 1);
    while(parser->token->type == TokenType::IDENTIFIER
        && next->type == TokenType::NAMESPACE_RESOLUTION)
    {
        current_module_path->next = module_path_init(&parser->arena, parser->token->identifier);
        current_module_path = current_module_path->next;

        parser_eat(parser, TokenType::IDENTIFIER);
        parser_eat(parser, TokenType::NAMESPACE_RESOLUTION);
    }

    return module_path;
}
