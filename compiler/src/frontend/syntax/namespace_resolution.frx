export import "../ast/namespace_resolution.frx";
import "../core/parser.frx";

export NamespaceResolution* namespace_resolution_parse(Parser* parser)
{
    frx::assert(parser != nullptr);

    mut b8 absolute = false;

    if(parser->token->type == TokenType::NAMESPACE_RESOLUTION)
    {
        parser_eat(parser, TokenType::NAMESPACE_RESOLUTION);

        absolute = true;
    }

    mut CoreNamespace* ns = nullptr;
    mut Token* next = parser_peek(parser, 1);

    while(parser->token->type == TokenType::IDENTIFIER
            && next->type == TokenType::NAMESPACE_RESOLUTION)
    {
        ns = namespace_create(ns, parser->token->identifier);

        parser_eat(parser, TokenType::IDENTIFIER);
        parser_eat(parser, TokenType::NAMESPACE_RESOLUTION);

        next = parser_peek(parser, 1);
    }

    return namespace_resolution_new(&parser->arena, ns, absolute);
}
