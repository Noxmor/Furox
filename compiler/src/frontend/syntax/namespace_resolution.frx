import "../core/namespace.frx";
import "../core/parser.frx";

namespace AST::NamespaceResolution
{
    export core::Namespace* parse(Parser* parser)
    {
        frx::assert(parser != nullptr);

        if(parser->token->type == TokenType::NAMESPACE_RESOLUTION)
        {
            parser_eat(parser, TokenType::NAMESPACE_RESOLUTION);

            return namespace_create_global();
        }

        mut Token* next = parser_peek(parser, 1);

        mut core::Namespace* ns = nullptr;
        if(parser->token->type == TokenType::IDENTIFIER
            && next->type == TokenType::NAMESPACE_RESOLUTION)
        {
            ns = namespace_create_global();
        }

        while(parser->token->type == TokenType::IDENTIFIER
            && next->type == TokenType::NAMESPACE_RESOLUTION)
        {
            ns = namespace_create(ns, parser->token->identifier);

            parser_eat(parser, TokenType::IDENTIFIER);
            parser_eat(parser, TokenType::NAMESPACE_RESOLUTION);

            next = parser_peek(parser, 1);
        }

        return ns;
    }
}
