export import "../ast/namespace_resolution.frx";
import "../core/parser.frx";

namespace AST::NamespaceResolution
{
    export NamespaceResolution* parse(Parser* parser)
    {
        frx::assert(parser != nullptr);

        mut b8 absolute = false;

        if(parser->token->type == TokenType::NAMESPACE_RESOLUTION)
        {
            Parser::eat(parser, TokenType::NAMESPACE_RESOLUTION);

            absolute = true;
        }

        mut core::Namespace* ns = nullptr;
        mut Token* next = Parser::peek(parser, 1);

        while(parser->token->type == TokenType::IDENTIFIER
            && next->type == TokenType::NAMESPACE_RESOLUTION)
        {
            ns = namespace_create(ns, parser->token->identifier);

            Parser::eat(parser, TokenType::IDENTIFIER);
            Parser::eat(parser, TokenType::NAMESPACE_RESOLUTION);

            next = Parser::peek(parser, 1);
        }

        return new(&parser->arena, ns, absolute);
    }
}
