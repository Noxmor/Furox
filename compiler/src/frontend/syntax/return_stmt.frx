import "../core/ast.frx";
import "../core/parser.frx";

export struct ASTReturnStmt
{
    AST* value;
}

export ASTReturnStmt* make_return_stmt(Arena* arena, AST* value)
{
    ASTReturnStmt* return_stmt = arena_alloc(arena, sizeof(ASTReturnStmt));

    return_stmt->value = value;

    return return_stmt;
}

export ASTReturnStmt* parse_return_stmt(Parser* parser)
{
    assert(parser != nullptr);

    parser_eat(parser, TOKEN_TYPE_KW_RETURN);

    AST* value = nullptr;

    if(parser->token->type != TOKEN_TYPE_SEMICOLON)
    {
        value = parse_expr(parser);
    }

    parser_eat(parser, TOKEN_TYPE_SEMICOLON);

    return make_return_stmt(&parser->arena, value);
}

export void print_return_stmt(ASTReturnStmt* return_stmt, FILE* file,
    usize depth)
{
    assert(return_stmt != nullptr);

    assert(file != nullptr);

    print_ast_depth(file, depth);

    fprintf(file, "%s\n", ast_type_to_str(AST_TYPE_RETURN_STMT));

    if(return_stmt->value != nullptr)
    {
        print_ast(return_stmt->value, file, depth + 1);
    }
}
