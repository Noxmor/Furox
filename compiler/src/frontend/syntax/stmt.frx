export AST* parse_statement(Parser* parser)
{
    assert(parser != nullptr);

    AST* ast = nullptr;

    switch(parser->token->type)
    {
        case TOKEN_TYPE_KW_BREAK:
        {
            ast = make_ast(&parser->arena, AST_TYPE_BREAK_STMT,
                parse_break_stmt(parser));

            break;
        }
        case TOKEN_TYPE_KW_CONTINUE:
        {
            ast = make_ast(&parser->arena, AST_TYPE_CONTINUE_STMT,
                parse_continue_stmt(parser));

            break;
        }
        case TOKEN_TYPE_KW_RETURN:
        {
            ast = make_ast(&parser->arena, AST_TYPE_RETURN_STMT,
                parse_return_stmt(parser));

            break;
        }
        default:
        {
            parser_panic(parser);

            break;
        }
    }

    return ast;
}
