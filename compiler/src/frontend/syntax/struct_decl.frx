export import "../ast/struct_decl.frx";
import "../core/namespace.frx";
import "../core/parser.frx";
import "../core/scope.frx";
import "../symbols/struct.frx";

namespace AST::StructDecl
{
    export StructDecl* parse(Parser* parser)
    {
        frx::assert(parser != nullptr);

        SourceLocation start = Parser::current_location(parser);

        Parser::eat(parser, TokenType::KW_EXTERN);

        Parser::eat(parser, TokenType::KW_STRUCT);

        char* name = parser->token->identifier;

        mut StructDecl* struct_decl = new(&parser->arena, parser->current_scope,
            nullptr, name);

        struct_decl->is_redefinition = !struct_table_insert(&parser->struct_table,
            &struct_decl->symbol);

        Parser::eat(parser, TokenType::IDENTIFIER);

        Parser::eat(parser, TokenType::SEMICOLON);

        struct_decl->range.start = start;
        struct_decl->range.end = Parser::current_location(parser);

        return struct_decl;
    }
}
