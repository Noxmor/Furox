import "../core/ast.frx";
import "../core/parser.frx";

extern struct FILE;

extern
{
    i32 fprintf(mut FILE* stream, char* format, ...);
}

export struct ASTStructMember
{
    char* name;
}

export ASTStructMember* make_struct_member(Arena* arena, char* name)
{
    frx::assert(name != nullptr);

    mut ASTStructMember* member = arena_alloc(arena,
        frx::sizeof(ASTStructMember));

    member->name = name;

    return member;
}

export void print_struct_member(ASTStructMember* member, FILE* file,
    usize depth)
{
    frx::assert(member != nullptr);

    frx::assert(file != nullptr);

    print_ast_depth(file, depth);

    fprintf(file, "%s (%s)\n", ast_type_to_str(AstType::STRUCT_MEMBER),
        member->name);
}
