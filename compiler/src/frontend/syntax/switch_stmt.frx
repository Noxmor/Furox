export import "../ast/switch_stmt.frx";
import "expr.frx";
import "scope.frx";
import "../core/parser.frx";
import "../../core/list.frx";

SwitchCase* switch_case_parse(Parser* parser)
{
    frx::assert(parser != nullptr);

    parser_eat(parser, TokenType::KW_CASE);
    Expr* value = expr_parse(parser);
    parser_eat(parser, TokenType::COLON);
    Scope* scope = scope_parse(parser);

    return switch_case_new(&parser->arena, value, scope);
}

export SwitchStmt* switch_stmt_parse(Parser* parser)
{
    frx::assert(parser != nullptr);

    parser_eat(parser, TokenType::KW_SWITCH);
    parser_eat(parser, TokenType::LPAREN);
    Expr* value = expr_parse(parser);
    parser_eat(parser, TokenType::RPAREN);

    mut SwitchStmt* switch_stmt = switch_stmt_new(&parser->arena, value);

    parser_eat(parser, TokenType::LBRACE);
    while(parser->token->type == TokenType::KW_CASE)
    {
        SwitchCase* switch_case = switch_case_parse(parser);
        switch_stmt_add_case(switch_stmt, switch_case);
    }

    if(parser->token->type == TokenType::KW_DEFAULT)
    {
        parser_eat(parser, TokenType::KW_DEFAULT);
        parser_eat(parser, TokenType::COLON);

        switch_stmt_set_default_scope(switch_stmt, scope_parse(parser));
    }

    parser_eat(parser, TokenType::RBRACE);

    return switch_stmt;
}
